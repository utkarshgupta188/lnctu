name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 isort pytest
    
    - name: Lint with flake8
      run: |
        flake8 --max-line-length=100 --extend-ignore=E203,W503 *.py
    
    - name: Check import sorting
      run: |
        isort --check-only --diff *.py
    
    - name: Check code formatting
      run: |
        black --check --line-length=100 *.py
    
    - name: Test imports
      run: |
        python -c "import main; print('✓ main.py')"
        python -c "import api; print('✓ api.py')"
        python -c "import at; print('✓ at.py')"
        python -c "import bot; print('✓ bot.py')"
        python -c "import test; print('✓ test.py')"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check
    
    - name: Run bandit security check
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true

  deploy-check:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify deployment configs
      run: |
        echo "Checking deployment configurations..."
        test -f Procfile && echo "✓ Heroku config found"
        test -f render.yaml && echo "✓ Render config found"
        test -f vercel.json && echo "✓ Vercel config found"
        echo "All deployment configs verified!"